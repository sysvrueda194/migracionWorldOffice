/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author USER
 */
public class Entrada_Informacion_Excel extends javax.swing.JFrame {

    private static DefaultTableModel modelo;
    private TableRowSorter trsFiltro;
    public String DireccionArchivo;
    private final JFileChooser FileChooser = new JFileChooser();
    public Salida_informacion_excel SIE = new Salida_informacion_excel();
    public Salida_informacion_terceros SIT = new Salida_informacion_terceros();
    DefaultTableModel modelo_base_iva_excento = (DefaultTableModel) SIE.getJT_Exportacion().getModel();
    DefaultTableModel modelo_terceros = (DefaultTableModel) SIT.getJT_Terceros().getModel();
    public String[] ciudades;

    /**
     * Creates new form Entrada_Informacion_Excel
     */
    public Entrada_Informacion_Excel() {
        initComponents();
        cargaCiudad();
        //muestraCiudad();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        JT_Importacion = new javax.swing.JTable();
        BTN_seleccionArchivo = new javax.swing.JButton();
        BTN_creacionArchivosImportacion = new javax.swing.JButton();
        TXT_nombreEmpresa = new javax.swing.JTextField();
        TXT_nitEmpresa = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Importacion WORLD OFFICE // Carga archivo a importar");

        JT_Importacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(JT_Importacion);

        BTN_seleccionArchivo.setText("carga archivo a importar");
        BTN_seleccionArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_seleccionArchivoActionPerformed(evt);
            }
        });

        BTN_creacionArchivosImportacion.setText("Crear Archivos para Importacion");
        BTN_creacionArchivosImportacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_creacionArchivosImportacionActionPerformed(evt);
            }
        });

        TXT_nombreEmpresa.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre de la Empresa Asignada"));

        TXT_nitEmpresa.setBorder(javax.swing.BorderFactory.createTitledBorder("NIT de la Empresa Asignada"));

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BTN_seleccionArchivo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BTN_creacionArchivosImportacion)
                                .addGap(52, 52, 52)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(TXT_nombreEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TXT_nitEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TXT_nombreEmpresa)
                    .addComponent(TXT_nitEmpresa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BTN_seleccionArchivo)
                    .addComponent(BTN_creacionArchivosImportacion)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BTN_seleccionArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_seleccionArchivoActionPerformed
        // TODO add your handling code here:
        File archivo = cargaArchivo();
        cargaTabla(archivo);
    }//GEN-LAST:event_BTN_seleccionArchivoActionPerformed

    private void BTN_creacionArchivosImportacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_creacionArchivosImportacionActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < JT_Importacion.getRowCount(); i++) {
            boolean cuentaIVA;
            if ((JT_Importacion.getValueAt(i, 14).toString().isEmpty())) {
                cuentaIVA = false;
                //System.out.println("El valor del iva en la fila " + i + " es: " + JT_Importacion.getValueAt(i, 14) + " el valor de 'cuentaIVA' es " + cuentaIVA + " y ejecutara 'cargaBase_iva'");
            } else {
                cuentaIVA = true;
                //System.out.println("El valor del iva en la fila " + i + " es: " + JT_Importacion.getValueAt(i, 14) + " el valor de 'cuentaIVA' es " + cuentaIVA + " y ejecutara 'cargaExcento'");

            }
            if (cuentaIVA == true) {
                cargaBase_iva(i);
            } else {
                cargaExcento(i);
            }
            cargaSalida(i);
            cargaTercero(i);
        }
        System.out.println("La carga de Archivos ha sido completada");
        SIE.getJT_Exportacion().setModel(modelo_base_iva_excento);
        SIE.setVisible(true);
        SIT.getJT_Terceros().setModel(modelo_terceros);
        SIT.setVisible(true);
    }//GEN-LAST:event_BTN_creacionArchivosImportacionActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        for (int k = 0; k < modelo_terceros.getRowCount(); k++) {
            System.out.println(k + " // " + modelo_terceros.getValueAt(k, 1));
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Entrada_Informacion_Excel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            ex.printStackTrace();
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Entrada_Informacion_Excel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTN_creacionArchivosImportacion;
    private javax.swing.JButton BTN_seleccionArchivo;
    private javax.swing.JTable JT_Importacion;
    private javax.swing.JTextField TXT_nitEmpresa;
    private javax.swing.JTextField TXT_nombreEmpresa;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private File cargaArchivo() {
        FileChooser.showDialog(null, "Importar Datos ");
        File file = FileChooser.getSelectedFile();
        DireccionArchivo = file.getAbsolutePath();
        char c1 = (char) 92;
        char c2 = (char) 47;
        System.out.println("char c1 = " + c1 + ", char c2 = " + c2);
        DireccionArchivo = DireccionArchivo.replace(c1, c2);
        System.out.println("Direccion Archivo Seleccionado = " + DireccionArchivo);
        return file;
    }

    private void cargaTabla(File archivo) {
        FileReader fr = null;
        BufferedReader br;
        br = null;
        try {
            // Apertura del fichero y creacion de BufferedReader para poder
            // hacer una lectura comoda (disponer del metodo readLine()).
            fr = new FileReader(archivo);
            br = new BufferedReader(fr);
            // Lectura del fichero
            String linea;
            DefaultListModel model_lista = new DefaultListModel();
            DefaultTableModel model_tabla = new DefaultTableModel();
            String inicio = br.readLine();
            String[] columnas = inicio.split(";");
            for (String columna1 : columnas) {
                model_tabla.addColumn(columna1);
            }
            while ((linea = br.readLine()) != null) {
                String[] data = linea.split(";");
                //System.out.println(linea);
                //jComboBox1.addItem(linea);
                //model_lista.addElement(linea);
                model_tabla.addRow(data);
            }
            //jList1.setModel(model_lista);
            JT_Importacion.setModel(model_tabla);
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                if (null != fr) {
                    fr.close();
                }
            } catch (IOException e2) {
                e2.printStackTrace();
            }
        }
    }

    private void cargaBase_iva(int i) {
        String nombre_empresa = TXT_nombreEmpresa.getText();
        String nit_empresa = TXT_nitEmpresa.getText();
        String[] base = new String[19];
        String[] IVA = new String[19];
        //------------------------------------- CARGA LA BASE PRIMERO -------------------------------------------

        base[0] = JT_Importacion.getValueAt(i, 3).toString();
        base[1] = nombre_empresa;
        base[2] = "FC";
        base[3] = JT_Importacion.getValueAt(i, 0).toString();
        base[4] = JT_Importacion.getValueAt(i, 4).toString();
        base[5] = JT_Importacion.getValueAt(i, 2).toString();
        base[6] = "FACTURA DE COMPRA";
        base[7] = JT_Importacion.getValueAt(i, 10).toString();
        base[8] = "";
        base[9] = JT_Importacion.getValueAt(i, 6).toString();
        base[10] = JT_Importacion.getValueAt(i, 6).toString();
        base[11] = JT_Importacion.getValueAt(i, 11).toString();
        base[12] = "";
        base[13] = JT_Importacion.getValueAt(i, 3).toString();
        base[14] = "";
        base[15] = "";
        base[16] = "";
        base[17] = "0";
        base[18] = nit_empresa;
        modelo_base_iva_excento.addRow(base);
        //--------------------------------carga IVA-------------------------------------------------------------------------------------------------
        IVA[0] = JT_Importacion.getValueAt(i, 3).toString();
        IVA[1] = nombre_empresa;
        IVA[2] = "FC";
        IVA[3] = JT_Importacion.getValueAt(i, 0).toString();
        IVA[4] = JT_Importacion.getValueAt(i, 4).toString();
        IVA[5] = JT_Importacion.getValueAt(i, 13).toString();
        IVA[6] = "FACTURA DE COMPRA";
        IVA[7] = "VALOR DE IVA";
        IVA[8] = "";
        IVA[9] = JT_Importacion.getValueAt(i, 6).toString();
        IVA[10] = JT_Importacion.getValueAt(i, 6).toString();
        IVA[11] = JT_Importacion.getValueAt(i, 14).toString();
        IVA[12] = "";
        IVA[13] = JT_Importacion.getValueAt(i, 3).toString();
        IVA[14] = "";
        IVA[15] = "";
        IVA[16] = "";
        IVA[17] = "0";
        IVA[18] = nit_empresa;
        //--------------------------------------asignacion al modelo---------------------------------
        modelo_base_iva_excento.addRow(IVA);
    }

    private void cargaTercero(int i) {
        String nit_empresa = JT_Importacion.getValueAt(i, 6).toString();
        boolean Existe = existeEmpresa(nit_empresa);
        String[] DatosTerceros = new String[19];
        String ciudad = "Bogota D.C.";
        if (!Existe) {
            if (JT_Importacion.getValueAt(i, 7).toString().isEmpty()) {
                DatosTerceros[0] = "CC";
                DatosTerceros[9] = "Persona Natural Regimen Comun";
                DatosTerceros[12] = "Casa";
            } else {
                DatosTerceros[0] = "NIT";
                DatosTerceros[9] = "Persona Juridica";
                DatosTerceros[12] = "Empresa/Oficina";
            }
            DatosTerceros[1] = JT_Importacion.getValueAt(i, 6).toString();
            DatosTerceros[2] = ciudad;
            DatosTerceros[3] = JT_Importacion.getValueAt(i, 5).toString();
            DatosTerceros[7] = "Proveedor, Vendedor";
            DatosTerceros[8] = "-1";
            DatosTerceros[10] = "0";
            DatosTerceros[11] = JT_Importacion.getValueAt(i, 3).toString() + " 00:00";
            DatosTerceros[13] = "-1";
            DatosTerceros[14] = JT_Importacion.getValueAt(i, 8).toString();
            DatosTerceros[15] = ciudad;
            DatosTerceros[16] = JT_Importacion.getValueAt(i, 9).toString();
            DatosTerceros[17] = "Normal";
            DatosTerceros[18] = "0";

            modelo_terceros.addRow(DatosTerceros);
        }

    }

    private void cargaExcento(int i) {
        String nombre_empresa = TXT_nombreEmpresa.getText();
        String nit_empresa = TXT_nitEmpresa.getText();
        String[] excento = new String[19];
        excento[0] = JT_Importacion.getValueAt(i, 3).toString();
        excento[1] = nombre_empresa;
        excento[2] = "FC";
        excento[3] = JT_Importacion.getValueAt(i, 0).toString();
        excento[4] = JT_Importacion.getValueAt(i, 4).toString();
        excento[5] = JT_Importacion.getValueAt(i, 2).toString();
        excento[6] = "FACTURA DE COMPRA";
        excento[7] = JT_Importacion.getValueAt(i, 10).toString();
        excento[8] = "";
        excento[9] = JT_Importacion.getValueAt(i, 6).toString();
        excento[10] = JT_Importacion.getValueAt(i, 6).toString();
        excento[11] = JT_Importacion.getValueAt(i, 16).toString();
        excento[12] = "";
        excento[13] = JT_Importacion.getValueAt(i, 3).toString();
        excento[14] = "";
        excento[15] = "";
        excento[16] = "";
        excento[17] = "0";
        excento[18] = nit_empresa;
        modelo_base_iva_excento.addRow(excento);
    }

    private void cargaSalida(int i) {
        String nombre_empresa = TXT_nombreEmpresa.getText();
        String nit_empresa = TXT_nitEmpresa.getText();
        String[] salida = new String[19];
        salida[0] = JT_Importacion.getValueAt(i, 3).toString();
        salida[1] = nombre_empresa;
        salida[2] = "FC";
        salida[3] = JT_Importacion.getValueAt(i, 0).toString();
        salida[4] = JT_Importacion.getValueAt(i, 4).toString();
        salida[5] = "11050501";
        salida[6] = "FACTURA DE COMPRA";
        salida[7] = "PAGO DE FACTURA";
        salida[8] = "";
        salida[9] = JT_Importacion.getValueAt(i, 6).toString();
        salida[10] = JT_Importacion.getValueAt(i, 6).toString();
        salida[11] = "";
        salida[12] = JT_Importacion.getValueAt(i, 17).toString();
        salida[13] = JT_Importacion.getValueAt(i, 3).toString();
        salida[14] = "";
        salida[15] = "";
        salida[16] = "";
        salida[17] = "0";
        salida[18] = nit_empresa;
        modelo_base_iva_excento.addRow(salida);
    }

    private boolean existeEmpresa(String nit_empresa) {
        boolean Existe = false;
        if (modelo_terceros.getRowCount() != 0) {
            //System.out.println("-----------------------------------------------inicia comparacion con el valor " + nit_empresa + "-----------------------------------------------------------------");
            for (int j = 0; j < modelo_terceros.getRowCount(); j++) {
                if (modelo_terceros.getValueAt(j, 1).toString().matches(nit_empresa)) {
                    Existe = true;
                    //System.out.println("el nit de la empresa es: " + nit_empresa + " el valor a comparar es: " + modelo_terceros.getValueAt(j, 1) + " // existencia de la empresa = " + Existe);
                    j = modelo_terceros.getRowCount() + 1;
                } else {
                    Existe = false;
                    //System.out.println("el nit de la empresa es: " + nit_empresa + " el valor a comparar es: " + modelo_terceros.getValueAt(j, 1) + " // existencia de la empresa = " + Existe);
                }
            }
        }
        return Existe;
    }

    private void cargaCiudad() {
        String entrada;
        String linea;
        boolean read = false;
        int j = 0;
        File file = new File("src/Archivos/Ciudades_World_Office2.csv");
        System.out.println(file.getAbsolutePath());
        System.out.println("Archivo de Ciudades Cargado");
        if (file.canRead()) {
            read = true;
            System.out.println("El archivo se puede leer");
        } else {
            read = false;
            System.out.println("No es posible leer el archivo");
        }
        if (read) {
            FileReader fr = null;
            BufferedReader br;
            br = null;
            try {
                fr = new FileReader(file);
                br = new BufferedReader(fr);
                entrada = br.readLine();
                while ((linea = br.readLine()) != null) {
                    entrada = entrada + ";" + linea;
                }
                ciudades = entrada.split(";");
            } catch (IOException e) {
                e.printStackTrace();
            } finally {
                try {
                    if (null != fr) {
                        fr.close();
                    }
                } catch (IOException e2) {
                    e2.printStackTrace();
                }
            }
        }
    }

    private void muestraCiudad() {
        for (String ciudade : ciudades) {
            System.out.println(ciudade);
        }
    }

}
